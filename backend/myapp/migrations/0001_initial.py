# Generated by Django 5.1.1 on 2024-11-02 14:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Post",
            fields=[
                ("post_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("postDate", models.DateTimeField(blank=True, null=True)),
                ("startDate", models.DateField(blank=True, null=True)),
                ("endDate", models.DateField(blank=True, null=True)),
                ("location", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "fullLocation",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "telephoneNumber",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "emailAddress",
                    models.EmailField(blank=True, max_length=255, null=True),
                ),
                ("content", models.TextField(blank=True, null=True)),
                ("is_completed", models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("user_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("username", models.CharField(max_length=255)),
                ("password", models.CharField(max_length=255)),
                ("identity", models.IntegerField()),
                ("registration_date", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="PostSubject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subject", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "post_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.post"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tutor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("age", models.IntegerField(blank=True, null=True)),
                ("gender", models.CharField(blank=True, max_length=255, null=True)),
                ("telephone", models.CharField(blank=True, max_length=255, null=True)),
                ("email", models.EmailField(blank=True, max_length=255, null=True)),
                ("rate", models.FloatField(blank=True, null=True)),
                ("rateNum", models.IntegerField(blank=True, null=True)),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                ("intro", models.TextField(blank=True, null=True)),
                (
                    "personalSignature",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("degree", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.user"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Todo",
            fields=[
                ("todo_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("is_completed", models.BooleanField()),
                (
                    "accept_post_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="source_post_id_todo",
                        to="myapp.post",
                    ),
                ),
                (
                    "accepter_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sender_id_todo",
                        to="myapp.user",
                    ),
                ),
                (
                    "owner_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owner_id_todo",
                        to="myapp.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StudyMaterial",
            fields=[
                ("material_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("file_name", models.CharField(max_length=255)),
                ("download_link", models.CharField(max_length=255)),
                ("upload_date", models.DateField()),
                (
                    "student_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_id_material",
                        to="myapp.user",
                    ),
                ),
                (
                    "tutor_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tutor_id_material",
                        to="myapp.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("age", models.IntegerField(blank=True, null=True)),
                ("gender", models.CharField(blank=True, max_length=255, null=True)),
                ("telephone", models.CharField(blank=True, max_length=255, null=True)),
                ("email", models.EmailField(blank=True, max_length=255, null=True)),
                ("grade", models.CharField(blank=True, max_length=255, null=True)),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                ("intro", models.TextField(blank=True, null=True)),
                (
                    "personalSignature",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="myapp.user"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                ("review_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("rating", models.FloatField(blank=True, null=True)),
                ("content", models.TextField(blank=True, null=True)),
                ("date", models.DateField(blank=True, null=True)),
                (
                    "student_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_id_review",
                        to="myapp.user",
                    ),
                ),
                (
                    "tutor_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tutor_id_review",
                        to="myapp.user",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="post",
            name="user_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="myapp.user"
            ),
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "notification_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                ("notificationDate", models.DateTimeField(blank=True, null=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_read", models.BooleanField()),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_id_notice",
                        to="myapp.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Link",
            fields=[
                ("link_id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "student_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_id_link",
                        to="myapp.user",
                    ),
                ),
                (
                    "tutor_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tutor_id_link",
                        to="myapp.user",
                    ),
                ),
            ],
        ),
    ]
